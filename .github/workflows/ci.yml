name: CI

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GTEST: 
  SSCDIR: $GITHUB_WORKSPACE/ssc

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
    
    - name: Set relative paths
      run: | 
        GTEST=$GITHUB_WORKSPACE/googletest
        echo "GTEST=$GTEST" >> $GITHUB_ENV
        SSCDIR=$GITHUB_WORKSPACE/ssc
        echo "SSCDIR=$SSCDIR" >> $GITHUB_ENV
    
    - name: Clone Gtest
      uses: actions/checkout@v2
      with:
        repository: google/googletest
        path: googletest
    
    - name: build Gtest
      run: | 
          export 
          mkdir ${GTEST}/build
          cd ${GTEST}/build
          cmake -DCMAKE_CXX_FLAGS=-std=c++11 ..
          make          
    
    - name: Checkout SSC
      uses: actions/checkout@v2
      with:
         path: ssc

    - name: Configure CMake
      # Configure cmake to build ssc tests but not tools
      run: |
        mkdir ${SSCDIR}/build
        cd ${SSCDIR}/build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DSAM_SKIP_TOOLS=1

    - name: Build
      # Build your program with the given configuration
      run: |
        cd ${SSCDIR}/build
        make -j4

    - name: Test
      # Turn off fast fail for when the landbosse tests write to cerr
      run: |
        set -e
        ${SSCDIR}/build/test/Test
      shell: bash
